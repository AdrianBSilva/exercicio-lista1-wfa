<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        C8tg+x/5AAAAAElFTkSuQmCC
</value>
  </data>
</root>